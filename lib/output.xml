<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.2 on linux)" generated="20200605 13:08:30.515" rpa="false">
<suite id="s1" name="Kubernetes Versions" source="/home/akash/acceptance-testing/testsuites/kubernetes_versions.robot">
<kw name="Suite Setup" type="setup">
<kw name="Cleanup All Test Clusters" library="Kind">
<msg timestamp="20200605 13:08:30.590" level="INFO">++ kind get clusters
++ grep '^helm-acceptance-test-20200605130830'
ERROR: failed to list clusters: command "docker ps -a --filter label=io.x-k8s.kind.cluster --format '{{.Label "io.x-k8s.kind.cluster"}}'" failed with error: exit status 1

Command Output: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</msg>
<status status="PASS" starttime="20200605 13:08:30.549" endtime="20200605 13:08:30.590"></status>
</kw>
<status status="PASS" starttime="20200605 13:08:30.548" endtime="20200605 13:08:30.590"></status>
</kw>
<test id="s1-t1" name="Helm Works on Kubernetes">
<kw name="Test Helm on Kubernetes version">
<kw name="Setup Cluster" library="ClusterProvider">
<arguments>
<arg>kind</arg>
<arg>1.17.0</arg>
</arguments>
<assign>
<var>${cluster}</var>
</assign>
<msg timestamp="20200605 13:08:30.591" level="INFO">${cluster} = &lt;ClusterProvider.SetupCluster object at 0x7fcf0d6bf100&gt;</msg>
<status status="PASS" starttime="20200605 13:08:30.591" endtime="20200605 13:08:30.591"></status>
</kw>
<kw name="Call Method" library="BuiltIn">
<doc>Calls the named method of the given object with the provided arguments.</doc>
<arguments>
<arg>${cluster}</arg>
<arg>get_kube_config</arg>
</arguments>
<assign>
<var>${ctx}</var>
</assign>
<msg timestamp="20200605 13:08:30.593" level="FAIL">Calling method 'get_kube_config' failed: FileNotFoundError: [Errno 2] No such file or directory: 'bash -c ../scripts/cluster_providers/kind.sh get_cluster_context 1.17.0 cluster-name'</msg>
<status status="FAIL" starttime="20200605 13:08:30.592" endtime="20200605 13:08:30.593"></status>
</kw>
<status status="FAIL" starttime="20200605 13:08:30.591" endtime="20200605 13:08:30.594"></status>
</kw>
<status status="FAIL" starttime="20200605 13:08:30.590" endtime="20200605 13:08:30.594" critical="yes">Calling method 'get_kube_config' failed: FileNotFoundError: [Errno 2] No such file or directory: 'bash -c ../scripts/cluster_providers/kind.sh get_cluster_context 1.17.0 cluster-name'</status>
</test>
<kw name="Suite Teardown" type="teardown">
<kw name="Cleanup All Test Clusters" library="Kind">
<msg timestamp="20200605 13:08:30.638" level="INFO">++ kind get clusters
++ grep '^helm-acceptance-test-20200605130830'
ERROR: failed to list clusters: command "docker ps -a --filter label=io.x-k8s.kind.cluster --format '{{.Label "io.x-k8s.kind.cluster"}}'" failed with error: exit status 1

Command Output: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</msg>
<status status="PASS" starttime="20200605 13:08:30.595" endtime="20200605 13:08:30.638"></status>
</kw>
<status status="PASS" starttime="20200605 13:08:30.594" endtime="20200605 13:08:30.638"></status>
</kw>
<doc>Verify Helm functionality on multiple Kubernetes versions.

Fresh new kind-based clusters will be created for each
of the Kubernetes versions being tested. An existing
kind cluster can be used by specifying it in an env var
representing the version, for example:

export KIND_CLUSTER_1_16_1="helm-ac-keepalive-1.16.1"
export KIND_CLUSTER_1_15_4="helm-ac-keepalive-1.15.4"
export KIND_CLUSTER_1_14_7="helm-ac-keepalive-1.14.7"
</doc>
<status status="FAIL" starttime="20200605 13:08:30.516" endtime="20200605 13:08:30.638"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="1">Critical Tests</stat>
<stat pass="0" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" id="s1" name="Kubernetes Versions">Kubernetes Versions</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
